{"fileType":"apogee app js workspace","version":"0.60","references":{"refEntries":[{"entryType":"npm module","url":"apogeejs-module-sqlite","nickname":"apogeejs-module-sqlite","serverUrl":""}],"viewState":{"treeState":1,"lists":{"npm module":{"treeState":1}}}},"code":{"model":{"fileType":"apogee model","version":0.3,"name":"Apogee Module Repository","children":{"main":{"name":"main","type":"apogee.Folder","children":{"addUser":{"name":"addUser","type":"apogee.Folder","children":{"inputForm":{"name":"inputForm","type":"apogee.Folder","children":{"formData":{"name":"formData","type":"apogee.JsonMember","updateData":{"data":{"uniqueKey":"topLevelDataPanel","type":"panel","formData":[{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"User Name: ","customLayout":{"size":"50"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"userName"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Email: ","customLayout":{"size":"50"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"email"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Password: ","customLayout":{"size":"50"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"password"}}],"submit":{"type":"submit","useSubmit":true,"submitLabel":"OK","useCancel":true,"cancelLabel":"Clear Request"}}}},"formResult":{"name":"formResult","type":"apogee.JsonMember","updateData":{"data":{"uniqueKey":"topLevelDataPanel","type":"panel","formData":[{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"User Name: ","customLayout":{"size":"50"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"userName"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Email: ","customLayout":{"size":"50"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"email"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Password: ","customLayout":{"size":"50"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"password"}}],"submit":{"type":"submit","useSubmit":true,"submitLabel":"OK","useCancel":true,"cancelLabel":"Clear Request"}},"contextParentGeneration":2}},"data":{"name":"data","type":"apogee.DesignerActionFormMember"}},"childrenNotWriteable":true},"requestBody":{"name":"requestBody","type":"apogee.JsonMember","updateData":{"invalidValue":true}},"addUserDescriptor":{"name":"addUserDescriptor","type":"apogee.JsonMember","updateData":{"data":{"name":"Add User","path":"/user/add","method":"post","inputs":{"body":"main.requestBody"}}}},"inputValid":{"name":"inputValid","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return true;","supplementalCode":""}},"passwordHash":{"name":"passwordHash","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return  main.auth.getEncryptedPasswordPromise(requestBody.password);","supplementalCode":""}},"insertUserQuery":{"name":"insertUserQuery","type":"apogee.Folder","children":{"formData":{"name":"formData","type":"apogee.JsonMember","updateData":{"data":{"dbPath":"main.dbFileForm.value","pathType":"simple","queryType":"run","sql":"INSERT INTO user (user_name,email,password_hash) VALUES (?,?,?)","sqlType":"value","params":"params","parameterType":"simple","cached":false,"openType":"readwrite","verbose":true,"createIfMissing":false,"resultDialog":false}}},"formResult":{"name":"formResult","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let output = {};\noutput[\"dbPath\"] = main.dbFileForm.value\noutput[\"pathType\"] = \"simple\"\noutput[\"queryType\"] = \"run\"\noutput[\"sql\"] = \"INSERT INTO user (user_name,email,password_hash) VALUES (?,?,?)\"\noutput[\"sqlType\"] = \"value\"\noutput[\"params\"] = params\noutput[\"parameterType\"] = \"simple\"\noutput[\"cached\"] = false\noutput[\"openType\"] = \"readwrite\"\noutput[\"verbose\"] = true\noutput[\"createIfMissing\"] = false\noutput[\"resultDialog\"] = false\nreturn output;","supplementalCode":"","contextParentGeneration":2}},"data":{"name":"data","type":"apogee.SqliteQueryMember"}}},"params":{"name":"params","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return [\n  requestBody.userName,\n  requestBody.email,\n  passwordHash\n];","supplementalCode":""}}}},"auth":{"name":"auth","type":"apogee.Folder","children":{"getEncryptedPasswordPromise":{"name":"getEncryptedPasswordPromise","type":"apogee.FunctionMember","updateData":{"argList":["rawPassword"],"functionBody":"if(rawPassword) {\n    let bcrypt = require(\"bcrypt\");\n    let encryptedPromise = new Promise( (resolve,reject) => {\n            bcrypt.hash(rawPassword, SALT_ROUNDS, function(err, hash) {\n                if(err) {\n                    reject(err);\n                }\n                else {\n                    resolve(hash);\n                }\n        });\n    })\n    return encryptedPromise;\n}\nelse {\n    return apogeeutil.INVALID_VALUE;\n}","supplementalCode":""}},"isMatchPromise":{"name":"isMatchPromise","type":"apogee.FunctionMember","updateData":{"argList":["rawPassword","passKey"],"functionBody":"if((rawPassword)&&(passKey)) {\n    let bcrypt = require(\"bcrypt\");\n    let matchPromise = new Promise( (resolve,reject) => {\n        bcrypt.compare(rawPassword, passKey, function(err, result) {\n            if(err) {\n                reject(err);\n            }\n            else {\n                resolve(result);\n            }\n        });\n    })\n    return matchPromise;\n}\nelse {\n    return apogeeutil.INVALID_VALUE;\n}","supplementalCode":""}},"SALT_ROUNDS":{"name":"SALT_ROUNDS","type":"apogee.JsonMember","updateData":{"data":10}}}},"dbFileForm":{"name":"dbFileForm","type":"apogee.Folder","children":{"input":{"name":"input","type":"apogee.JsonMember","updateData":{"data":""}},"value":{"name":"value","type":"apogee.JsonMember","updateData":{"data":"C:\\Dave\\dev\\github\\apogeejs-module-repository\\database\\ModuleRepo.db"}}},"childrenNotWriteable":true},"addModule":{"name":"addModule","type":"apogee.Folder","children":{"addUserDescriptor":{"name":"addUserDescriptor","type":"apogee.JsonMember","updateData":{"data":{"name":"Add Module","path":"/module/add","method":"post","inputs":{"body":"main.requestBody"}}}},"requestBody":{"name":"requestBody","type":"apogee.JsonMember","updateData":{"invalidValue":true}},"inputValid":{"name":"inputValid","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return true;","supplementalCode":""}},"inputForm":{"name":"inputForm","type":"apogee.Folder","children":{"formData":{"name":"formData","type":"apogee.JsonMember","updateData":{"data":{"uniqueKey":"topLevelDataPanel","type":"panel","formData":[{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Module Name: ","customLayout":{"size":"50"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"moduleName"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"User Name:","customLayout":{"size":"50"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"userName"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Display Name:","customLayout":{"size":"50"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"displayName"}},{"key":"basicTextarea","value":{"uniqueKey":"basicTextarea","type":"textarea","label":"Short Description:","customLayout":{"cols":"50","rows":"4"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"shortDesc"}}],"submit":{"type":"submit","useSubmit":true,"submitLabel":"OK","useCancel":true,"cancelLabel":"Clear Request"}}}},"formResult":{"name":"formResult","type":"apogee.JsonMember","updateData":{"data":{"uniqueKey":"topLevelDataPanel","type":"panel","formData":[{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Module Name: ","customLayout":{"size":"50"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"moduleName"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"User Name:","customLayout":{"size":"50"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"userName"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Display Name:","customLayout":{"size":"50"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"displayName"}},{"key":"basicTextarea","value":{"uniqueKey":"basicTextarea","type":"textarea","label":"Short Description:","customLayout":{"cols":"50","rows":"4"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"shortDesc"}}],"submit":{"type":"submit","useSubmit":true,"submitLabel":"OK","useCancel":true,"cancelLabel":"Clear Request"}},"contextParentGeneration":2}},"data":{"name":"data","type":"apogee.DesignerActionFormMember"}}},"params":{"name":"params","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return [\n  requestBody.moduleName,\n  requestBody.userName,\n  requestBody.displayName,\n  requestBody.shortDesc\n];","supplementalCode":""}},"insertUserQuery":{"name":"insertUserQuery","type":"apogee.Folder","children":{"formData":{"name":"formData","type":"apogee.JsonMember","updateData":{"data":{"dbPath":"main.dbFileForm.value","pathType":"simple","queryType":"run","sql":"INSERT INTO module (module_name,user_name,display_name,short_description) VALUES (?,?,?,?)","sqlType":"value","params":"params","parameterType":"simple","cached":false,"openType":"readwrite","verbose":true,"createIfMissing":false,"resultDialog":false}}},"formResult":{"name":"formResult","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let output = {};\noutput[\"dbPath\"] = main.dbFileForm.value\noutput[\"pathType\"] = \"simple\"\noutput[\"queryType\"] = \"run\"\noutput[\"sql\"] = \"INSERT INTO module (module_name,user_name,display_name,short_description) VALUES (?,?,?,?)\"\noutput[\"sqlType\"] = \"value\"\noutput[\"params\"] = params\noutput[\"parameterType\"] = \"simple\"\noutput[\"cached\"] = false\noutput[\"openType\"] = \"readwrite\"\noutput[\"verbose\"] = true\noutput[\"createIfMissing\"] = false\noutput[\"resultDialog\"] = false\nreturn output;","supplementalCode":"","contextParentGeneration":2}},"data":{"name":"data","type":"apogee.SqliteQueryMember"}}}}},"addModuleVersion":{"name":"addModuleVersion","type":"apogee.Folder","children":{"inputForm":{"name":"inputForm","type":"apogee.Folder","children":{"formData":{"name":"formData","type":"apogee.JsonMember","updateData":{"data":{"uniqueKey":"topLevelDataPanel","type":"panel","formData":[{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Module Name: ","customLayout":{"size":"50"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"moduleName"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Module Version: ","customLayout":{"size":"25"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"moduleVersion"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"ES URL: ","customLayout":{"size":"100"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"esUrl"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"NPM Name: ","customLayout":{"size":"50"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"npmName"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"NPM URL: ","customLayout":{"size":"100"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"npmUrl"}},{"key":"simpleList","value":{"uniqueKey":"simpleList","type":"list","label":"ES Workspace URLs:","entryType":{"label":"ES Workspace","key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"","customLayout":{"size":"100"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"url"}},"hint":"","help":"","useSelector":"none","key":"esWorkspaceUrls"}},{"key":"simpleList","value":{"uniqueKey":"simpleList","type":"list","label":"NPM Workspace URLs:","entryType":{"label":"NPM Workspace","key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"","customLayout":{"size":"100"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"url"}},"hint":"","help":"","useSelector":"none","key":"npmWorkspaceUrls"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Web Link: ","customLayout":{"size":"100"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"webLink"}}],"submit":{"type":"submit","useSubmit":true,"submitLabel":"OK","useCancel":true,"cancelLabel":"Clear Request"}}}},"formResult":{"name":"formResult","type":"apogee.JsonMember","updateData":{"data":{"uniqueKey":"topLevelDataPanel","type":"panel","formData":[{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Module Name: ","customLayout":{"size":"50"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"moduleName"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Module Version: ","customLayout":{"size":"25"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"moduleVersion"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"ES URL: ","customLayout":{"size":"100"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"esUrl"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"NPM Name: ","customLayout":{"size":"50"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"npmName"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"NPM URL: ","customLayout":{"size":"100"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"npmUrl"}},{"key":"simpleList","value":{"uniqueKey":"simpleList","type":"list","label":"ES Workspace URLs:","entryType":{"label":"ES Workspace","key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"","customLayout":{"size":"100"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"url"}},"hint":"","help":"","useSelector":"none","key":"esWorkspaceUrls"}},{"key":"simpleList","value":{"uniqueKey":"simpleList","type":"list","label":"NPM Workspace URLs:","entryType":{"label":"NPM Workspace","key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"","customLayout":{"size":"100"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"url"}},"hint":"","help":"","useSelector":"none","key":"npmWorkspaceUrls"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Web Link: ","customLayout":{"size":"100"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"webLink"}}],"submit":{"type":"submit","useSubmit":true,"submitLabel":"OK","useCancel":true,"cancelLabel":"Clear Request"}},"contextParentGeneration":2}},"data":{"name":"data","type":"apogee.DesignerActionFormMember"}},"childrenNotWriteable":true},"addUserDescriptor":{"name":"addUserDescriptor","type":"apogee.JsonMember","updateData":{"data":{"name":"Add Module","path":"/module/addversion","method":"post","inputs":{"body":"main.requestBody","queryParams":"main.requestParams"}}}},"requestBody":{"name":"requestBody","type":"apogee.JsonMember","updateData":{"invalidValue":true}},"requestParams":{"name":"requestParams","type":"apogee.JsonMember","updateData":{"data":""}},"inputValid":{"name":"inputValid","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return true;","supplementalCode":""}},"params":{"name":"params","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"//load the optional values\nlet esUrl = (requestBody.esUrl) ? requestBody.esUrl : null;\nlet npmName = (requestBody.npmName) ? requestBody.npmName : null;\nlet npmUrl = (requestBody.npmUrl) ? requestBody.npmUrlUrl : null;\nlet esWorkspaceUrlsText = ((requestBody.esWorkspaceUrls)&&(requestBody.esWorkspaceUrls.length > 0)) ? JSON.stringify(requestBody.esWorkspaceUrls) : null; \nlet npmWorkspaceUrlsText = ((requestBody.npmWorkspaceUrls)&&(requestBody.npmWorkspaceUrls.length > 0)) ? JSON.stringify(requestBody.npmWorkspaceUrls) : null; \nlet webLink = (requestBody.webLink) ? requestBody.webLink : null;\n\nreturn [\n  requestBody.moduleName,\n  requestBody.moduleVersion,\n  esUrl,\n  npmName,\n  npmUrl,\n  esWorkspaceUrlsText,\n  npmWorkspaceUrlsText,\n  webLink\n];","supplementalCode":""}},"insertUserQuery":{"name":"insertUserQuery","type":"apogee.Folder","children":{"formData":{"name":"formData","type":"apogee.JsonMember","updateData":{"data":{"dbPath":"main.dbFileForm.value","pathType":"simple","queryType":"run","sql":"INSERT INTO module_version (module_name, module_version, es_url, npm_name, npm_url, es_workspaces, npm_workspaces, web_link) VALUES (?,?,?,?,?,?,?,?)","sqlType":"value","params":"params","parameterType":"simple","cached":false,"openType":"readwrite","verbose":true,"createIfMissing":false,"resultDialog":false}}},"formResult":{"name":"formResult","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let output = {};\noutput[\"dbPath\"] = main.dbFileForm.value\noutput[\"pathType\"] = \"simple\"\noutput[\"queryType\"] = \"run\"\noutput[\"sql\"] = \"INSERT INTO module_version (module_name, module_version, es_url, npm_name, npm_url, es_workspaces, npm_workspaces, web_link) VALUES (?,?,?,?,?,?,?,?)\"\noutput[\"sqlType\"] = \"value\"\noutput[\"params\"] = params\noutput[\"parameterType\"] = \"simple\"\noutput[\"cached\"] = false\noutput[\"openType\"] = \"readwrite\"\noutput[\"verbose\"] = true\noutput[\"createIfMissing\"] = false\noutput[\"resultDialog\"] = false\nreturn output;","supplementalCode":"","contextParentGeneration":2}},"data":{"name":"data","type":"apogee.SqliteQueryMember"}}}}}}},"Design":{"name":"Design","type":"apogee.Folder","children":{}}}},"components":{"main":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Apogee Model Repository"}]},{"type":"heading2","content":[{"type":"text","text":"Database File"}]},{"type":"paragraph","content":[{"type":"text","marks":[{"type":"textcolor","attrs":{"color":"yellow"}},{"type":"highlight","attrs":{"color":"green"}}],"text":"Make a speciealized cell for this! - select a fiel (or folder)"}]},{"type":"apogeeComponent","attrs":{"name":"dbFileForm","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"addUser":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Add User"}]},{"type":"heading2","content":[{"type":"text","text":"Test Input"}]},{"type":"apogeeComponent","attrs":{"name":"inputForm","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Descriptor"}]},{"type":"paragraph","content":[{"type":"text","marks":[{"type":"textcolor","attrs":{"color":"yellow"}},{"type":"highlight","attrs":{"color":"green"}}],"text":"Make a speciealized cell for this! - endpoint and service descriptor"}]},{"type":"apogeeComponent","attrs":{"name":"addUserDescriptor","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Request"}]},{"type":"apogeeComponent","attrs":{"name":"requestBody","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Response"}]},{"type":"paragraph","content":[{"type":"text","text":"No response body. An error will happen is tables have an error. "}]},{"type":"heading2","content":[{"type":"text","text":"Implementation"}]},{"type":"paragraph","content":[{"type":"text","text":"This table validates the input data. if it is not valid it throws an exception. If it is valid it just returns true."}]},{"type":"apogeeComponent","attrs":{"name":"inputValid","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"passwordHash","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"params","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"insertUserQuery","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"inputForm":{"type":"apogeeapp.DesignerActionFormCell","onSubmitCode":"cmdMsngr.dataCommand(\"requestBody\",formValue);","onCancelCode":"cmdMsngr.dataCommand(\"requestBody\",apogeeutil.INVALID_VALUE);","allowInputExpressions":true,"viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Input":{"isViewActive":false},"On Save":{"height":7000,"isViewActive":false},"On Cancel":{"height":7000,"isViewActive":false}}}}},"requestBody":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"addUserDescriptor":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"inputValid":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"passwordHash":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"insertUserQuery":{"type":"apogeeapp.SqliteQueryCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Result":{"height":280,"isViewActive":true},"Input":{"isViewActive":true}}}}},"params":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"auth":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Auth Utilities"}]},{"type":"apogeeComponent","attrs":{"name":"getEncryptedPasswordPromise","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"isMatchPromise","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"SALT_ROUNDS","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"heading2"},{"type":"paragraph"}]}},"children":{"getEncryptedPasswordPromise":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"isMatchPromise":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"SALT_ROUNDS":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"dbFileForm":{"type":"apogeeapp.FullDataFormCell","layoutCode":"let onSubmit = () => {\n    var {dialog} = require('electron').remote;\n\n    let pathPromise = dialog.showOpenDialog({properties: ['openFile']})\n        .then( fileOpenResult => {\n            if(fileOpenResult.canceled) {\n                //canceled - no action\n                return;\n            }\n        \telse if(fileOpenResult.filePaths.length === 1) {\n        \t    commandMessenger.dataCommand(\"dbFileForm.value\",fileOpenResult.filePaths[0]);\n        \t}\n        \telse if(fileOpenResult.filePaths.length > 1) {\n        \t    apogeeUserAlert(\"Multiple file selection not supported!\");\n        \t}\n        \telse {\n        \t    //canceled - no action\n        \t\tapogeeUserAlert(\"Unknown error: no path selected\");\n        \t}\n        })\n        .catch(err => {\n        \tapogeeUserAlert(\"Error getting DB path: \" + err.toString());\n        });\n}\n\nreturn [\n    {\n        type: \"submit\",\n        onSubmit: onSubmit,\n        submitLabel: \"Select DB File\"\n    }    \n]","validatorCode":"return true","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"form":{"isViewActive":true},"layout":{"height":7000,"isViewActive":false},"validator":{"isViewActive":false,"height":7000},"input":{"isViewActive":false,"height":7000},"inputPrivate":{"isViewActive":false,"height":7000},"value":{"isViewActive":true,"height":280}}}}},"addModule":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Add Module"}]},{"type":"heading2","content":[{"type":"text","text":"Test Input"}]},{"type":"apogeeComponent","attrs":{"name":"inputForm","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"TO DO - get the user name from the session!"}]},{"type":"heading2","content":[{"type":"text","text":"Descriptor"}]},{"type":"apogeeComponent","attrs":{"name":"addUserDescriptor","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Request"}]},{"type":"apogeeComponent","attrs":{"name":"requestBody","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Response"}]},{"type":"paragraph","content":[{"type":"text","text":"No response body. An error will happen is tables have an error. "}]},{"type":"heading2","content":[{"type":"text","text":"Implementation"}]},{"type":"paragraph","content":[{"type":"text","text":"This table validates the input data. if it is not valid it throws an exception. If it is valid it just returns true."}]},{"type":"apogeeComponent","attrs":{"name":"inputValid","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"params","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"insertUserQuery","id":0,"state":""}},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"DOH!"}]},{"type":"paragraph","content":[{"type":"text","text":"I need to add \"try/catch/finally\". For two reasons:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"Handling the conditional execution of the \"create module\" query. Lacking that, I will make a separate query so the user must manually create a module entry."}]},{"type":"listItem","content":[{"type":"text","text":"Cleaning up a failure in the second action - create module version entry and save file data. Lacking that I will just leave the error."}]}]}]}},"children":{"addUserDescriptor":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"requestBody":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"inputValid":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"inputForm":{"type":"apogeeapp.DesignerActionFormCell","onSubmitCode":"cmdMsngr.dataCommand(\"requestBody\",formValue);","onCancelCode":"cmdMsngr.dataCommand(\"requestBody\",apogeeutil.INVALID_VALUE);","allowInputExpressions":true,"viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Input":{"isViewActive":true},"On Save":{"height":7000,"isViewActive":false},"On Cancel":{"height":7000,"isViewActive":false}}}}},"params":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"insertUserQuery":{"type":"apogeeapp.SqliteQueryCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Result":{"height":280,"isViewActive":true},"Input":{"isViewActive":true}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"addModuleVersion":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Add Module Version"}]},{"type":"heading2","content":[{"type":"text","text":"Test Input"}]},{"type":"apogeeComponent","attrs":{"name":"inputForm","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"TO DO - update submit and cancel to work with the two inputs."}]},{"type":"heading2","content":[{"type":"text","text":"Descriptor"}]},{"type":"apogeeComponent","attrs":{"name":"addUserDescriptor","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Request"}]},{"type":"apogeeComponent","attrs":{"name":"requestBody","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"requestParams","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Response"}]},{"type":"paragraph","content":[{"type":"text","text":"No response body. An error will happen is tables have an error. "}]},{"type":"heading2","content":[{"type":"text","text":"Implementation"}]},{"type":"paragraph","content":[{"type":"text","text":"This table validates the input data. if it is not valid it throws an exception. If it is valid it just returns true."}]},{"type":"apogeeComponent","attrs":{"name":"inputValid","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"params","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"insertUserQuery","id":0,"state":""}},{"type":"heading2"}]}},"children":{"inputForm":{"type":"apogeeapp.DesignerActionFormCell","onSubmitCode":"cmdMsngr.dataCommand(\"requestBody\",formValue);","onCancelCode":"cmdMsngr.dataCommand(\"requestBody\",apogeeutil.INVALID_VALUE);","allowInputExpressions":true,"viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Input":{"isViewActive":false},"On Save":{"height":7000,"isViewActive":false},"On Cancel":{"height":7000,"isViewActive":false}}}}},"addUserDescriptor":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"requestBody":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"requestParams":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":false,"height":280},"Formula":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"inputValid":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"params":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"insertUserQuery":{"type":"apogeeapp.SqliteQueryCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Result":{"height":280,"isViewActive":true},"Input":{"isViewActive":true}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true,"tabShowing":true}}},"viewState":{"treeState":1,"tabOpened":true}},"Design":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Module Repository Design"}]},{"type":"heading2","content":[{"type":"text","text":"Notes"}]},{"type":"heading3","content":[{"type":"text","text":"Hosting"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"I need to get a permanent URL for the repository. I don't want to change the links - modules.apogeejs.com?"}]},{"type":"listItem","content":[{"type":"text","text":"For starters, I have no real server, even if this is the code. My plan is to run this temporarily. I also want the service to run on static files."}]}]},{"type":"paragraph","content":[{"type":"text","text":"Static file sources:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"Github"}]},{"type":"listItem","content":[{"type":"text","text":"netlify"}]},{"type":"listItem","content":[{"type":"text","text":"azure or other real host"}]}]},{"type":"paragraph","content":[{"type":"text","text":"I'll run off off github only for initial testing. I will switch to netlify so other people can use it with the final URL. Before this goes public I will make a real service that processing inputs."}]},{"type":"paragraph","content":[{"type":"text","text":"Static Design:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"For now, I want to allow two distinct requests - npm and es modules."}]},{"type":"listItem","content":[{"type":"text","text":"Later, I will also want to alter the response based on the version of the app requesting. "},{"type":"text","marks":[{"type":"highlight","attrs":{"color":"yellow"}}],"text":"FOR NOW I WILL IGNORE THAT"}]}]},{"type":"paragraph","content":[{"type":"text","text":"Server Design for Static Site Generation"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"The server will populate the file system and the sqlite database"}]},{"type":"listItem","content":[{"type":"text","text":"I will have a process to call the server and generate the request files. Probably an apogee workspace"}]}]},{"type":"paragraph","content":[{"type":"text","text":"An issue for transitioning the server is that the module request file needs to list the url. And ideally this would be a constant. But we can't do that with our server migration plan. Options for hadling the URL:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","marks":[{"type":"highlight","attrs":{"color":"#a0a0a0"}}],"text":"I can define a relative url in the file, and the program can use that. BUT I really do want a single real url. "}]},{"type":"listItem","content":[{"type":"text","text":"In the server, set it to a constant url, whatever will be the place from which it is accessed. So initially I would set it to github. And you couldn't access the file from the local location. "}]},{"type":"listItem","content":[{"type":"text","text":"I could make a conversion of the host in the workspace that generates the request tile."}]},{"type":"listItem","content":[{"type":"text","text":"I could pass a dummy param in that tells what the hosting server is for the files"}]}]},{"type":"paragraph","content":[{"type":"text","text":"I'll do all three that are not grayed out.  "}]},{"type":"heading2","content":[{"type":"text","text":"Actions"}]},{"type":"heading3","content":[{"type":"text","text":"User management"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"add user"}]},{"type":"listItem","content":[{"type":"text","text":"update user - email, password"}]},{"type":"listItem","content":[{"type":"text","text":"remove user"}]},{"type":"listItem","content":[{"type":"text","text":"login"}]},{"type":"listItem","content":[{"type":"text","text":"logout"}]},{"type":"listItem","content":[{"type":"text","text":"change password"}]},{"type":"listItem","content":[{"type":"text","text":"reset password"}]}]},{"type":"heading4","content":[{"type":"text","text":"Validation - get a key to enable certain actions (LATER)"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"request remove user"}]},{"type":"listItem","content":[{"type":"text","text":"request change password"}]},{"type":"listItem","content":[{"type":"text","text":"request delete module"}]},{"type":"listItem","content":[{"type":"text","text":"request delete module version"}]}]},{"type":"heading3","content":[{"type":"text","text":"User Modules"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"get user modules"}]},{"type":"listItem","content":[{"type":"text","text":"get module versions"}]},{"type":"listItem","content":[{"type":"text","text":"add module"}]},{"type":"listItem","content":[{"type":"text","text":"update module version (figure out what can be updated. For one we need to allow adding to npm for npm modjules)"}]},{"type":"listItem","content":[{"type":"text","text":"delete module version"}]},{"type":"listItem","content":[{"type":"text","text":"delete module"}]}]},{"type":"heading3","content":[{"type":"text","text":"All Modules"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"get modules"}]},{"type":"listItem","content":[{"type":"text","text":"lookup module"}]}]},{"type":"heading2","content":[{"type":"text","text":"Schema"}]},{"type":"heading3","content":[{"type":"text","text":"User"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"user_name - text"}]},{"type":"listItem","content":[{"type":"text","text":"email - text"}]},{"type":"listItem","content":[{"type":"text","text":"password_hash - (text?)"}]},{"type":"listItem","content":[{"type":"text","text":"status (once a user is deleted it can not be reused) - TBD"}]}]},{"type":"heading3","content":[{"type":"text","text":"Module"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"module_name - text"}]},{"type":"listItem","content":[{"type":"text","text":"user_name (foreign key)"}]},{"type":"listItem","content":[{"type":"text","text":"display_name - text"}]},{"type":"listItem","content":[{"type":"text","text":"short_desc - text"}]},{"type":"listItem","content":[{"type":"text","text":"status (once a module is deleted it can not be reused) - TBD"}]}]},{"type":"heading3","content":[{"type":"text","text":"Module Version"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"version_id"}]},{"type":"listItem","content":[{"type":"text","text":"module_name (foreign key)"}]},{"type":"listItem","content":[{"type":"text","text":"module_version - text"}]},{"type":"listItem","content":[{"type":"text","text":"min_app_major_version (for now 2) - int"}]},{"type":"listItem","content":[{"type":"text","text":"min_app_minor_version (for now 0) - int"}]},{"type":"listItem","content":[{"type":"text","text":"max_app_major_version (for now some big number? no max) - int"}]},{"type":"listItem","content":[{"type":"text","text":"es_url - text"}]},{"type":"listItem","content":[{"type":"text","text":"npm_name (should match module name, null if not in npm) - text"}]},{"type":"listItem","content":[{"type":"text","text":"npm_url (if a tgz file is available away from npm) text"}]},{"type":"listItem","content":[{"type":"text","text":"es_workspaces (json/text) - text"}]},{"type":"listItem","content":[{"type":"text","text":"npm_workspaces (json/text) - text"}]},{"type":"listItem","content":[{"type":"text","text":"web_link - text"}]},{"type":"listItem","content":[{"type":"text","text":"status (once version is deleted it can not be reused) - TBD"}]}]},{"type":"paragraph"},{"type":"paragraph","content":[{"type":"text","text":"NOTES:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"initially we will lave these unused (and null): min/max app versions, status"}]}]},{"type":"paragraph"}]}},"viewState":{"childDisplayState":null,"tabOpened":true}},"viewState":{"treeState":1}}},"viewState":{"treeState":1}}